---
- name: Install KVM Packages (RHEL)
  become: true
  tags: ['kvm']
  ansible.builtin.dnf:
    name: "{{ kvm_qemu_dnf }}"
    lock_timeout: 180
    state: present
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Install KVM Packages (Debian)
  become: true
  tags: ['kvm']
  ansible.builtin.apt:
    name: "{{ kvm_qemu_apt }}"
    state: present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == 'Pop!_OS'

- name: Configure system
  become: true
  tags: ['kvm']
  block:
    - name: Add Users to libvirt/kvm group
      ansible.builtin.user:
        name: "{{ item }}"
        groups: "{{ kvm_qemu_groups }}"
        append: true
      with_items: "{{ kvm_qemu_users }}"
    - name: Create KVM Primary Storage Pool directory
      ansible.builtin.file:
        path: "{{ kvm_primary_storage }}"
        owner: root
        group: kvm
        mode: "0775"
        state: directory
    - name: Configure Sysctl
      ansible.builtin.template:
        src: sysctl.conf.j2
        dest: /etc/sysctl.conf
        mode: "0644"
      notify: Source_sysctl
    - name: Create AppArmor path
      ansible.builtin.file:
        path: '/etc/apparmor.d/local/abstractions'
        owner: root
        group: root
        mode: '0755'
        state: directory
    - name: Configure AppArmor
      ansible.builtin.template:
        src: apparmor-libvirt.j2
        dest: /etc/apparmor.d/local/abstractions/libvirt-qemu
        mode: "0644"
      notify: Restart_apparmor
    - name: Copy libvirtd.conf
      ansible.builtin.copy:
        src: libvirtd.conf
        dest: /etc/libvirt/libvirtd.conf
        mode: "0644"
    - name: Copy libvirt.conf (client)
      ansible.builtin.copy:
        src: libvirt.conf
        dest: /etc/libvirt/libvirt.conf
        mode: "0644"

- name: Enable listen_tcp in libvirt (RHEL)
  become: true
  tags: ['kvm']
  ansible.builtin.lineinfile:
    dest: /etc/sysconfig/libvirtd
    regexp: ^#LIBVIRTD_ARGS="--listen"
    line: LIBVIRTD_ARGS="--listen"
    state: present
    backup: true
  notify: Restart_libvirtd
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Enable physical bridge br0 (RHEL)
  become: true
  tags: ['kvm']
  ansible.builtin.lineinfile:
    dest: /etc/qemu-kvm/bridge.conf
    insertafter: EOF
    line: allow br0
    regexp: ^allow br0
    state: present
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
